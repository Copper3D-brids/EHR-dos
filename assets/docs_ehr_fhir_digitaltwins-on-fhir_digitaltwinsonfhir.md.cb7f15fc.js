import{_ as e,o,c as t,Q as i}from"./chunks/framework.b462f4d2.js";const r=JSON.parse('{"title":"DigitalTWINs on FHIR","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ehr/fhir/digitaltwins-on-fhir/digitaltwinsonfhir.md","filePath":"docs/ehr/fhir/digitaltwins-on-fhir/digitaltwinsonfhir.md","lastUpdated":1730243830000}'),a={name:"docs/ehr/fhir/digitaltwins-on-fhir/digitaltwinsonfhir.md"},s=[i('<h1 id="digitaltwins-on-fhir" tabindex="-1">DigitalTWINs on FHIR <a class="header-anchor" href="#digitaltwins-on-fhir" aria-label="Permalink to &quot;DigitalTWINs on FHIR&quot;">​</a></h1><p><strong><a href="https://chat.fhir.org/#narrow/channel/463037-Digital-Twins-on-FHIR" target="_blank" rel="noreferrer">Digital Twins on FHIR (DToF)</a></strong> is a conceptual FHIR based framework to standardise key concepts, tools and data within the context of a workflow. In this sense a workflow comprises one or more steps where certain (software) tools take relevant data (e.g. from EHR) and feed into computational models (of human physiology &amp; anatomy) to generate derived data which may be used to predict disease progression or treatment effects. We are using FHIR to make the data and models FAIR (findable, accessible, interoperable, and reusable).</p><p>DigitalTWINs on FHIR enables users to store patients&#39; hospital EHR data and research data (such as clinical descriptions, mathematical models, and medical images). The foundational concept of DigitalTWINs on FHIR version 1 is the use of FHIR R4 resources to build the DigitalTWINs FHIR Specification. This specification is divided into four parts: Primary Measurements, Workflow, Workflow Tools, and Workflow Tool Process.</p><ul><li>Primary Measurements: Raw EHR data from hospitals or research institutes.</li><li>Workflow: Defines the steps, actions, inputs, and outputs of a research study.</li><li>Workflow Tools: Tools used in each step or action of the workflow.</li><li>Workflow Tool Process: Generated by executing a tool or step within a workflow.</li></ul><p>The core idea behind DigitalTWINs on FHIR is to develop a digital twin system for patients, clinicians, and researchers.</p><ul><li>Patients can view historical medical reports and predictions of disease progression.</li><li>Clinicians can access patient history report data and review predicted clinical reports generated by researchers’ workflows.</li><li>Researchers can create patient cohorts and use their raw EHR data as input for their studies.</li></ul><h2 id="version-1" tabindex="-1">Version 1 <a class="header-anchor" href="#version-1" aria-label="Permalink to &quot;Version 1&quot;">​</a></h2><p><img src="/ehr-docs/fhir/dtof/assets/image-20241028171850455.png" alt="image-20241028171850455"></p><p>FHIR version: <strong>R4</strong></p><h3 id="search" tabindex="-1">Search <a class="header-anchor" href="#search" aria-label="Permalink to &quot;Search&quot;">​</a></h3><ul><li>Finding all primary measurements for a patient.</li><li>Find which workflow, tool, and primary data was used to generate a specific derived measurement observation.</li><li>Find all tools and models used by a workflow and their workflow tool processes.</li><li>Find inputs and outputs of a given tool in a workflow.</li></ul><h3 id="tutorials" tabindex="-1">Tutorials <a class="header-anchor" href="#tutorials" aria-label="Permalink to &quot;Tutorials&quot;">​</a></h3><ul><li><strong><a href="https://colab.research.google.com/drive/1PXGz4kfrAT6Z_N6iHMB2ZkwcU2LfZbBm#scrollTo=VIE5Sb1C92F-" target="_blank" rel="noreferrer">digitaltwins on fhir api</a></strong></li><li><strong><a href="https://colab.research.google.com/drive/17lfpRgRA863XFfCUKccCEsi10aFLEh9-" target="_blank" rel="noreferrer">generate report</a></strong></li></ul><h3 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h3><ul><li>Packages <ul><li>GitHub <ul><li><strong><a href="https://github.com/ABI-CTT-Group/digitaltwins-on-fhir" target="_blank" rel="noreferrer">digitaltwins-on-fhir</a></strong></li><li><strong><a href="https://github.com/ABI-CTT-Group/clinical-description-annotator" target="_blank" rel="noreferrer">clinical-description-annotator</a></strong></li></ul></li><li>Pypi <ul><li><strong><a href="https://pypi.org/project/digitaltwins-on-fhir/" target="_blank" rel="noreferrer">digitaltwins-on-fhir</a></strong></li><li><strong><a href="https://pypi.org/project/fhir-cda/" target="_blank" rel="noreferrer">fhir-cda</a></strong></li></ul></li></ul></li><li>App <ul><li>GitHub <ul><li><strong><a href="https://github.com/Copper3D-brids/DigitalTWINonFHIRFrontend" target="_blank" rel="noreferrer">Frontend</a></strong></li><li><strong><a href="https://github.com/Copper3D-brids/DigitalTWINsonFHIR-Backend" target="_blank" rel="noreferrer">Backend</a></strong></li></ul></li><li><strong><a href="https://build-seven-iota.vercel.app/#/" target="_blank" rel="noreferrer">Preview App</a></strong></li></ul></li></ul><h3 id="discussion" tabindex="-1">Discussion <a class="header-anchor" href="#discussion" aria-label="Permalink to &quot;Discussion&quot;">​</a></h3><ul><li>Version control of <code>Task</code> (Workflow tool process) <ul><li>If a researcher run a same workflow tool for a same patient&#39;s measurements, it is hard to find their relationship <ul><li>Scenario 1 ( run different workflow tool): Researcher A run breast workflow tool A for patient A with measurements A. Then run breast workflow tool B for patient A with measurements B. <ul><li>This situation is very simple, we can search the <code>workflow tool process</code> by <code>patient&#39;s id, dataset&#39;id, researcher&#39;id, workflow&#39;id and workflow tool&#39;s id</code> , and then use <code>measurements A</code> and <code>measurements B</code> or their <code>title</code> to distinguish the <code>workflow tool process A</code> and <code>workflow tool process B</code>. Because the measurements should be as a reference in workflow tool process input.</li></ul></li><li>Scenario 2 (run same workflow tool for same patient&#39; measurements): Researcher A run breast workflow tool A for patient A with measurements A twice. <ul><li>This situation is a little bit tricky, but we still can solve it by execution time. The basic solution is same to above, but this time we will receive two almost same <code>workflow tool process</code> with same <code>title, input measurements referece, dataset&#39;s reference researcher reference, patient reference, workflow reference, workflow tool reference</code>. The differences between them are <code>uuid, output observation reference, execution time</code> . So, once we find these two <code>workflow tool process</code> via <code>forward way</code> (dataset -&gt; patient -&gt; workflow -&gt; workflow tool -&gt; workflow tool process), we cannot distinguish them by <code>title or measurements</code> , but need <code>title or measurements</code> to get them first and then we can distinguish them by their <code> execution time</code>.</li></ul></li><li>Scenario 3 (run same workflow tool for same patient): Researcher A run breast workflow tool A for patient A without measurements A twice. <ul><li>This situation is tricky, because some workflow tool don&#39;t have EHR data as their input. So we cannot use <code>measurements</code> now, and when we search <code>workflow tool process</code> via <code>forward way</code> we will get all workflow tools&#39; processes. At this stage we also can use <code>title</code> to get these two <code>workflow tool process</code> and then distinguish them by their execution time.</li></ul></li><li><strong>Conclusion: As for the <code>Task (workflow tool process)</code>, we can use their execution time for the version control.</strong></li></ul></li></ul></li><li>Image format <ul><li>Currently, we are using <code>ImagingStudy</code> to store one patient&#39;s <code>Dicom MRI</code> data. But in some tools (e.g, <code>tumour position and extent report App</code>) they need other image format, such as <code>NRRD</code>. Therefore, when we want to annotate one patient&#39;s image via <code>tumour position and extent report App</code> , we cannot sent the MRIs&#39; endpoint directly to the target App, but we need to do below steps: <ul><li>Send the patient <code>ImageStudy&#39;s endpoint uuid</code> to backend, and get the <code>Dicom</code> images</li><li>Convert the <code>Dicom MRIs</code> to <code>NRRD</code> format</li><li>Send the images to <code>tumour position and extent report App</code></li></ul></li><li>Time consuming <ul><li>Request the images from PACs</li><li>Convert <code>Dicom</code> to <code>NRRD</code></li><li>Send <code>NRRD</code> to the target tool</li></ul></li></ul></li><li>Patient cohorts <ul><li>Missing patients research cohorts</li></ul></li></ul><h2 id="version-2" tabindex="-1">Version 2 <a class="header-anchor" href="#version-2" aria-label="Permalink to &quot;Version 2&quot;">​</a></h2><p><img src="/ehr-docs/fhir/dtof/assets/image-20241028204424450.png" alt="image-20241028204424450"></p><p>FHIR version: <strong>R5</strong></p><h3 id="search-1" tabindex="-1">Search <a class="header-anchor" href="#search-1" aria-label="Permalink to &quot;Search&quot;">​</a></h3><ul><li>Finding all primary measurements for a patient. - No</li><li>Find which workflow, tool, and primary data was used to generate a specific derived measurement observation. - Conditional Yes, (only if the workflow tool process has input/output EHR data.)</li><li>Find all tools and models used by a workflow and their workflow tool processes. - Yes</li><li>Find inputs and outputs of a given tool in a workflow. - No (there is no links between workflow tool process and workflow.)</li></ul><h3 id="discussion-1" tabindex="-1">Discussion <a class="header-anchor" href="#discussion-1" aria-label="Permalink to &quot;Discussion&quot;">​</a></h3><ul><li>What exactly information that we want to store for <code>workflow, workflow tool and workflow tool process</code>?</li><li>We are using <code>PlanDefinition</code> to store the <code>workflow</code> information, the <code>PlanDefinition</code> has already fields to store <code>workflow title, description, actions/steps, action&#39;s input/output</code>, what information we want to store in <code>ActivityDefinition</code>?</li><li>The <code>DeviceDefinition</code> we are used to store the <code>workflow tool</code> information, so the <code>Device</code> is the <code>workflow tool process</code>? We can save the <code>execution time</code> in <a href="https://www.hl7.org/fhir/device-definitions.html#Device.manufactureDate" target="_blank" rel="noreferrer">manufactureDate</a> , but here is a issue, consider this scenario if two different <code>workflow</code> use the same <code>workflow tool</code> and they run the same patient&#39;s measurements and same dataset, how can we distinguish <code>workflow tool processes</code> belong to which <code>workflow</code> by search <code>workflow tool process</code> directly?</li><li>Under this architecture, we cannot find the relationship between <code>workflow tool process</code> and <code>patient</code><ul><li>Patient can be in different <code>ResearchStudy</code></li><li>The patient <code>primary measurements</code> <strong>may</strong> be used in same workflow actions (workflow tools) as input data</li><li>Some <code>workflow tool</code> <strong>may</strong> not have EHR input/output data, so their <code>workflow tool process</code> don&#39;t have reference to result observation and primary observation.</li></ul></li><li>Under this architecture, we cannot find the relationship between <code>workflow tool process</code> and <code>ResearchStudy</code><ul><li>This diagram is using <code>ResearchStudy</code> level to connect workflow not in <code>Patient</code> level <ul><li>We cannot find a <code>patient&#39;s</code> workflow tool process precisely, because its under <code>ResearchStudy</code> level, we only search like this: <ul><li>From <code>ResearchStudy</code><ul><li>Find the <code>PlanDefinition</code> via <code>protocol</code></li><li>Find all the patients belong to this <code>ResearchStudy</code></li><li>Find <code>workflow tools</code> belong to this <code>PlanDefinition (workflow)</code></li><li>Then choose one <code>DeviceDefinition (workflow tool)</code> find all <code>Devices (workflow tool processes)</code> , <strong>Notice:</strong> all Devices here means the Device may generate from other <code>ResearchStudy (dataset)</code> and <code>PlanDefinition (workflow)</code> , because there is no constraints/reference among <code>Device (workflow tool process), ResearchStudy (dataset), PlanDefinition (workflow)</code>. <ul><li>We may find some relationship between <code>Device (workflow tool process)&#39;s reslut Observations</code> and <code>Primary Measurements</code>, But we cannot guarantee all <code>Device</code> has EHR input/output data.</li></ul></li></ul></li><li>From <code>PlanDefinition</code><ul><li>We can find a <code>PlanDefintion (workflow)&#39;s ResearchStudy</code> by search <code>protocol</code> in <code>ResearchStudy</code></li><li>Then we will meet the same issue.</li></ul></li></ul></li></ul></li></ul></li></ul>',24)];const n=e(a,[["render",function(e,i,r,a,n,l){return o(),t("div",null,s)}]]);export{r as __pageData,n as default};
